
////////////////////////////////////////////2D prefix sum///////////////////////////////////////////

int n, m; cin >> n >> m;
    vector<vector<int>> grid(n, vector<int>(m));

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            cin >> grid[i][j];
        }
    }

    for (int i = 0; i < n; ++i) {
        for (int j = 1; j < m; ++j) {
            grid[i][j] += grid[i][j - 1];
        }
    }

    for (int i = 1; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            grid[i][j] += grid[i - 1][j];
        }
    }

    int q, l1, l2, r1, r2, ans; cin >> q;
    while(q--) {
        cin >> l1 >> r1 >> l2 >> r2;
        //l2--,l1--, r1--, r2--; // index
        ans = grid[l2][r2];

        if(l1 - 1 >= 0)
            ans -= grid[l1 - 1][r2];

        if(r1 - 1 >= 0)
            ans -= grid[l2][r1 - 1];

        if(l1 - 1 >= 0 && r1 - 1 >= 0)
            ans += grid[l1 -1][r1 - 1];

        cout << ans << endl;
    }


////////////////////////////////////////////2D partial sum///////////////////////////////////////////