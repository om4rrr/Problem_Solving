#include <bits/stdc++.h>

using namespace std;

void fileIO(void) {

#ifndef ONLINE_JUDGE

    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);

#endif

}

void fastIO(void) {

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

}

int dx_all[8] = { 1, 0, -1, 0, 1, 1, -1, -1 },
        dy_all[8] = { 0, 1, 0, -1, -1, 1, -1, 1 };
int dx[4] = { 1, 0, -1, 0 },
        dy[4] = { 0, 1, 0, -1 };

typedef long long ll;
#define int ll
#define all(x) x.begin(),x.end()

vector<vector<int>>adj;
vector<bool>vis;
vector<int>parent;

void bfs(int start) {

    queue<int>q;
    q.push(start);
    vis[start] = 1;
    parent[start] = -1;

    while(!q.empty()){

        int u = q.front();
        q.pop();

        for(auto v : adj[u]){
            if(!vis[v]){
                q.push(v);
                vis[v] = 1;
                parent[v] = u;
            }
        }
    }

}

void solve(int t) {

    int n, m; cin >> n >> m;
    adj.assign(n + 1, vector<int>());
    vis.assign(n + 1, 0);
    parent.assign(n + 1, -1);

    for (int i = 0; i < m; ++i) {
        int u, v; cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    bfs(2);

    stack<int>ans;
    int curr = 8;
    while(curr != -1){
        ans.push(curr);
        curr = parent[curr];
    }

    cout << ans.size() << '\n';
    while(!ans.empty()){
        cout << ans.top() << ' ';
        ans.pop();
    }

}

signed main() {
    fastIO(); fileIO();
    int tests = 1, t = 1; //cin>>tests;
    while(tests--) {
        solve(t);
        t++;
    }
    return 0;
}
